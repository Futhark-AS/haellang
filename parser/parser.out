Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     expression -> expression PLUS expression
Rule 2     expression -> expression MINUS expression
Rule 3     expression -> expression TIMES expression
Rule 4     expression -> expression DIVIDE expression
Rule 5     expression -> expression GT expression
Rule 6     expression -> expression LT expression
Rule 7     expression -> expression EQ expression
Rule 8     expression -> LPAREN expression RPAREN
Rule 9     expression -> NUMBER
Rule 10    expression -> BOOL
Rule 11    expression -> NAME
Rule 12    statement -> statement statement
Rule 13    statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
Rule 14    statement -> NAME EQUALS expression END_OF_STATEMENT
Rule 15    statement -> BREAK END_OF_STATEMENT
Rule 16    statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
Rule 17    statement -> PRINT expression END_OF_STATEMENT
Rule 18    statement -> PASS END_OF_STATEMENT

Terminals, with rules where they appear

BOOL                 : 10
BREAK                : 15
DIVIDE               : 4
DO                   : 16
ELSE                 : 13
END_OF_IF_THEN_ELSE  : 13
END_OF_STATEMENT     : 13 14 15 16 17 18
END_OF_WHILE         : 16
EQ                   : 7
EQUALS               : 14
GT                   : 5
IF                   : 13
LPAREN               : 8
LT                   : 6
MINUS                : 2
NAME                 : 11 14
NUMBER               : 9
PASS                 : 18
PLUS                 : 1
PRINT                : 17
RPAREN               : 8
THEN                 : 13
TIMES                : 3
WHILE                : 16
error                : 

Nonterminals, with rules where they appear

expression           : 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 13 14 16 17
statement            : 12 12 13 13 16 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .
    (12) statement -> statement . statement
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 8

state 2

    (13) statement -> IF . expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 9

state 3

    (14) statement -> NAME . EQUALS expression END_OF_STATEMENT

    EQUALS          shift and go to state 14


state 4

    (15) statement -> BREAK . END_OF_STATEMENT

    END_OF_STATEMENT shift and go to state 15


state 5

    (16) statement -> WHILE . expression DO statement END_OF_WHILE END_OF_STATEMENT
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 16

state 6

    (17) statement -> PRINT . expression END_OF_STATEMENT
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 17

state 7

    (18) statement -> PASS . END_OF_STATEMENT

    END_OF_STATEMENT shift and go to state 18


state 8

    (12) statement -> statement statement .
    (12) statement -> statement . statement
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for NAME resolved as shift
  ! shift/reduce conflict for BREAK resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PASS resolved as shift
    $end            reduce using rule 12 (statement -> statement statement .)
    ELSE            reduce using rule 12 (statement -> statement statement .)
    END_OF_WHILE    reduce using rule 12 (statement -> statement statement .)
    END_OF_IF_THEN_ELSE reduce using rule 12 (statement -> statement statement .)
    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

  ! IF              [ reduce using rule 12 (statement -> statement statement .) ]
  ! NAME            [ reduce using rule 12 (statement -> statement statement .) ]
  ! BREAK           [ reduce using rule 12 (statement -> statement statement .) ]
  ! WHILE           [ reduce using rule 12 (statement -> statement statement .) ]
  ! PRINT           [ reduce using rule 12 (statement -> statement statement .) ]
  ! PASS            [ reduce using rule 12 (statement -> statement statement .) ]

    statement                      shift and go to state 8

state 9

    (13) statement -> IF expression . THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            shift and go to state 19
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    GT              shift and go to state 24
    LT              shift and go to state 25
    EQ              shift and go to state 26


state 10

    (8) expression -> LPAREN . expression RPAREN
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 27

state 11

    (9) expression -> NUMBER .

    THEN            reduce using rule 9 (expression -> NUMBER .)
    PLUS            reduce using rule 9 (expression -> NUMBER .)
    MINUS           reduce using rule 9 (expression -> NUMBER .)
    TIMES           reduce using rule 9 (expression -> NUMBER .)
    DIVIDE          reduce using rule 9 (expression -> NUMBER .)
    GT              reduce using rule 9 (expression -> NUMBER .)
    LT              reduce using rule 9 (expression -> NUMBER .)
    EQ              reduce using rule 9 (expression -> NUMBER .)
    DO              reduce using rule 9 (expression -> NUMBER .)
    END_OF_STATEMENT reduce using rule 9 (expression -> NUMBER .)
    RPAREN          reduce using rule 9 (expression -> NUMBER .)


state 12

    (10) expression -> BOOL .

    THEN            reduce using rule 10 (expression -> BOOL .)
    PLUS            reduce using rule 10 (expression -> BOOL .)
    MINUS           reduce using rule 10 (expression -> BOOL .)
    TIMES           reduce using rule 10 (expression -> BOOL .)
    DIVIDE          reduce using rule 10 (expression -> BOOL .)
    GT              reduce using rule 10 (expression -> BOOL .)
    LT              reduce using rule 10 (expression -> BOOL .)
    EQ              reduce using rule 10 (expression -> BOOL .)
    DO              reduce using rule 10 (expression -> BOOL .)
    END_OF_STATEMENT reduce using rule 10 (expression -> BOOL .)
    RPAREN          reduce using rule 10 (expression -> BOOL .)


state 13

    (11) expression -> NAME .

    THEN            reduce using rule 11 (expression -> NAME .)
    PLUS            reduce using rule 11 (expression -> NAME .)
    MINUS           reduce using rule 11 (expression -> NAME .)
    TIMES           reduce using rule 11 (expression -> NAME .)
    DIVIDE          reduce using rule 11 (expression -> NAME .)
    GT              reduce using rule 11 (expression -> NAME .)
    LT              reduce using rule 11 (expression -> NAME .)
    EQ              reduce using rule 11 (expression -> NAME .)
    DO              reduce using rule 11 (expression -> NAME .)
    END_OF_STATEMENT reduce using rule 11 (expression -> NAME .)
    RPAREN          reduce using rule 11 (expression -> NAME .)


state 14

    (14) statement -> NAME EQUALS . expression END_OF_STATEMENT
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 28

state 15

    (15) statement -> BREAK END_OF_STATEMENT .

    IF              reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    NAME            reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    BREAK           reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    WHILE           reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    PRINT           reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    PASS            reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    $end            reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    ELSE            reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    END_OF_WHILE    reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)
    END_OF_IF_THEN_ELSE reduce using rule 15 (statement -> BREAK END_OF_STATEMENT .)


state 16

    (16) statement -> WHILE expression . DO statement END_OF_WHILE END_OF_STATEMENT
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    DO              shift and go to state 29
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    GT              shift and go to state 24
    LT              shift and go to state 25
    EQ              shift and go to state 26


state 17

    (17) statement -> PRINT expression . END_OF_STATEMENT
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    END_OF_STATEMENT shift and go to state 30
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    GT              shift and go to state 24
    LT              shift and go to state 25
    EQ              shift and go to state 26


state 18

    (18) statement -> PASS END_OF_STATEMENT .

    IF              reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    NAME            reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    BREAK           reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    WHILE           reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    PRINT           reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    PASS            reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    $end            reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    ELSE            reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    END_OF_WHILE    reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)
    END_OF_IF_THEN_ELSE reduce using rule 18 (statement -> PASS END_OF_STATEMENT .)


state 19

    (13) statement -> IF expression THEN . statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 31

state 20

    (1) expression -> expression PLUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 32

state 21

    (2) expression -> expression MINUS . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 33

state 22

    (3) expression -> expression TIMES . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 34

state 23

    (4) expression -> expression DIVIDE . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 35

state 24

    (5) expression -> expression GT . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 36

state 25

    (6) expression -> expression LT . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 37

state 26

    (7) expression -> expression EQ . expression
    (1) expression -> . expression PLUS expression
    (2) expression -> . expression MINUS expression
    (3) expression -> . expression TIMES expression
    (4) expression -> . expression DIVIDE expression
    (5) expression -> . expression GT expression
    (6) expression -> . expression LT expression
    (7) expression -> . expression EQ expression
    (8) expression -> . LPAREN expression RPAREN
    (9) expression -> . NUMBER
    (10) expression -> . BOOL
    (11) expression -> . NAME

    LPAREN          shift and go to state 10
    NUMBER          shift and go to state 11
    BOOL            shift and go to state 12
    NAME            shift and go to state 13

    expression                     shift and go to state 38

state 27

    (8) expression -> LPAREN expression . RPAREN
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    RPAREN          shift and go to state 39
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    GT              shift and go to state 24
    LT              shift and go to state 25
    EQ              shift and go to state 26


state 28

    (14) statement -> NAME EQUALS expression . END_OF_STATEMENT
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    END_OF_STATEMENT shift and go to state 40
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23
    GT              shift and go to state 24
    LT              shift and go to state 25
    EQ              shift and go to state 26


state 29

    (16) statement -> WHILE expression DO . statement END_OF_WHILE END_OF_STATEMENT
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 41

state 30

    (17) statement -> PRINT expression END_OF_STATEMENT .

    IF              reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    NAME            reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    BREAK           reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    WHILE           reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    PRINT           reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    PASS            reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    $end            reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    ELSE            reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    END_OF_WHILE    reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)
    END_OF_IF_THEN_ELSE reduce using rule 17 (statement -> PRINT expression END_OF_STATEMENT .)


state 31

    (13) statement -> IF expression THEN statement . ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (12) statement -> statement . statement
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    ELSE            shift and go to state 42
    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 8

state 32

    (1) expression -> expression PLUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 1 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 1 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 1 (expression -> expression PLUS expression .)
    GT              reduce using rule 1 (expression -> expression PLUS expression .)
    LT              reduce using rule 1 (expression -> expression PLUS expression .)
    EQ              reduce using rule 1 (expression -> expression PLUS expression .)
    DO              reduce using rule 1 (expression -> expression PLUS expression .)
    END_OF_STATEMENT reduce using rule 1 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 1 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23

  ! TIMES           [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 1 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 20 ]
  ! MINUS           [ shift and go to state 21 ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 33

    (2) expression -> expression MINUS expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 2 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 2 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 2 (expression -> expression MINUS expression .)
    GT              reduce using rule 2 (expression -> expression MINUS expression .)
    LT              reduce using rule 2 (expression -> expression MINUS expression .)
    EQ              reduce using rule 2 (expression -> expression MINUS expression .)
    DO              reduce using rule 2 (expression -> expression MINUS expression .)
    END_OF_STATEMENT reduce using rule 2 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 2 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23

  ! TIMES           [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 2 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 20 ]
  ! MINUS           [ shift and go to state 21 ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 34

    (3) expression -> expression TIMES expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 3 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 3 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 3 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 3 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 3 (expression -> expression TIMES expression .)
    GT              reduce using rule 3 (expression -> expression TIMES expression .)
    LT              reduce using rule 3 (expression -> expression TIMES expression .)
    EQ              reduce using rule 3 (expression -> expression TIMES expression .)
    DO              reduce using rule 3 (expression -> expression TIMES expression .)
    END_OF_STATEMENT reduce using rule 3 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 3 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 20 ]
  ! MINUS           [ shift and go to state 21 ]
  ! TIMES           [ shift and go to state 22 ]
  ! DIVIDE          [ shift and go to state 23 ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 35

    (4) expression -> expression DIVIDE expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 4 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 4 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 4 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 4 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 4 (expression -> expression DIVIDE expression .)
    GT              reduce using rule 4 (expression -> expression DIVIDE expression .)
    LT              reduce using rule 4 (expression -> expression DIVIDE expression .)
    EQ              reduce using rule 4 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 4 (expression -> expression DIVIDE expression .)
    END_OF_STATEMENT reduce using rule 4 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 4 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 20 ]
  ! MINUS           [ shift and go to state 21 ]
  ! TIMES           [ shift and go to state 22 ]
  ! DIVIDE          [ shift and go to state 23 ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 36

    (5) expression -> expression GT expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 5 (expression -> expression GT expression .)
    GT              reduce using rule 5 (expression -> expression GT expression .)
    LT              reduce using rule 5 (expression -> expression GT expression .)
    EQ              reduce using rule 5 (expression -> expression GT expression .)
    DO              reduce using rule 5 (expression -> expression GT expression .)
    END_OF_STATEMENT reduce using rule 5 (expression -> expression GT expression .)
    RPAREN          reduce using rule 5 (expression -> expression GT expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23

  ! PLUS            [ reduce using rule 5 (expression -> expression GT expression .) ]
  ! MINUS           [ reduce using rule 5 (expression -> expression GT expression .) ]
  ! TIMES           [ reduce using rule 5 (expression -> expression GT expression .) ]
  ! DIVIDE          [ reduce using rule 5 (expression -> expression GT expression .) ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 37

    (6) expression -> expression LT expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 6 (expression -> expression LT expression .)
    GT              reduce using rule 6 (expression -> expression LT expression .)
    LT              reduce using rule 6 (expression -> expression LT expression .)
    EQ              reduce using rule 6 (expression -> expression LT expression .)
    DO              reduce using rule 6 (expression -> expression LT expression .)
    END_OF_STATEMENT reduce using rule 6 (expression -> expression LT expression .)
    RPAREN          reduce using rule 6 (expression -> expression LT expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23

  ! PLUS            [ reduce using rule 6 (expression -> expression LT expression .) ]
  ! MINUS           [ reduce using rule 6 (expression -> expression LT expression .) ]
  ! TIMES           [ reduce using rule 6 (expression -> expression LT expression .) ]
  ! DIVIDE          [ reduce using rule 6 (expression -> expression LT expression .) ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 38

    (7) expression -> expression EQ expression .
    (1) expression -> expression . PLUS expression
    (2) expression -> expression . MINUS expression
    (3) expression -> expression . TIMES expression
    (4) expression -> expression . DIVIDE expression
    (5) expression -> expression . GT expression
    (6) expression -> expression . LT expression
    (7) expression -> expression . EQ expression

    THEN            reduce using rule 7 (expression -> expression EQ expression .)
    GT              reduce using rule 7 (expression -> expression EQ expression .)
    LT              reduce using rule 7 (expression -> expression EQ expression .)
    EQ              reduce using rule 7 (expression -> expression EQ expression .)
    DO              reduce using rule 7 (expression -> expression EQ expression .)
    END_OF_STATEMENT reduce using rule 7 (expression -> expression EQ expression .)
    RPAREN          reduce using rule 7 (expression -> expression EQ expression .)
    PLUS            shift and go to state 20
    MINUS           shift and go to state 21
    TIMES           shift and go to state 22
    DIVIDE          shift and go to state 23

  ! PLUS            [ reduce using rule 7 (expression -> expression EQ expression .) ]
  ! MINUS           [ reduce using rule 7 (expression -> expression EQ expression .) ]
  ! TIMES           [ reduce using rule 7 (expression -> expression EQ expression .) ]
  ! DIVIDE          [ reduce using rule 7 (expression -> expression EQ expression .) ]
  ! GT              [ shift and go to state 24 ]
  ! LT              [ shift and go to state 25 ]
  ! EQ              [ shift and go to state 26 ]


state 39

    (8) expression -> LPAREN expression RPAREN .

    THEN            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    GT              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    END_OF_STATEMENT reduce using rule 8 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 8 (expression -> LPAREN expression RPAREN .)


state 40

    (14) statement -> NAME EQUALS expression END_OF_STATEMENT .

    IF              reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    NAME            reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    BREAK           reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    WHILE           reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    PRINT           reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    PASS            reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    $end            reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    ELSE            reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    END_OF_WHILE    reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)
    END_OF_IF_THEN_ELSE reduce using rule 14 (statement -> NAME EQUALS expression END_OF_STATEMENT .)


state 41

    (16) statement -> WHILE expression DO statement . END_OF_WHILE END_OF_STATEMENT
    (12) statement -> statement . statement
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    END_OF_WHILE    shift and go to state 43
    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 8

state 42

    (13) statement -> IF expression THEN statement ELSE . statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 44

state 43

    (16) statement -> WHILE expression DO statement END_OF_WHILE . END_OF_STATEMENT

    END_OF_STATEMENT shift and go to state 45


state 44

    (13) statement -> IF expression THEN statement ELSE statement . END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (12) statement -> statement . statement
    (12) statement -> . statement statement
    (13) statement -> . IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT
    (14) statement -> . NAME EQUALS expression END_OF_STATEMENT
    (15) statement -> . BREAK END_OF_STATEMENT
    (16) statement -> . WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT
    (17) statement -> . PRINT expression END_OF_STATEMENT
    (18) statement -> . PASS END_OF_STATEMENT

    END_OF_IF_THEN_ELSE shift and go to state 46
    IF              shift and go to state 2
    NAME            shift and go to state 3
    BREAK           shift and go to state 4
    WHILE           shift and go to state 5
    PRINT           shift and go to state 6
    PASS            shift and go to state 7

    statement                      shift and go to state 8

state 45

    (16) statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .

    IF              reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    NAME            reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    BREAK           reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    WHILE           reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    PRINT           reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    PASS            reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    $end            reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    ELSE            reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    END_OF_WHILE    reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)
    END_OF_IF_THEN_ELSE reduce using rule 16 (statement -> WHILE expression DO statement END_OF_WHILE END_OF_STATEMENT .)


state 46

    (13) statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE . END_OF_STATEMENT

    END_OF_STATEMENT shift and go to state 47


state 47

    (13) statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .

    IF              reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    NAME            reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    BREAK           reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    WHILE           reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    PRINT           reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    PASS            reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    $end            reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    ELSE            reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    END_OF_WHILE    reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)
    END_OF_IF_THEN_ELSE reduce using rule 13 (statement -> IF expression THEN statement ELSE statement END_OF_IF_THEN_ELSE END_OF_STATEMENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IF in state 8 resolved as shift
WARNING: shift/reduce conflict for NAME in state 8 resolved as shift
WARNING: shift/reduce conflict for BREAK in state 8 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 8 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 8 resolved as shift
WARNING: shift/reduce conflict for PASS in state 8 resolved as shift
